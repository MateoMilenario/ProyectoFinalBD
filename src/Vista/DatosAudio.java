/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Control.ControlAudio;
import Control.ControlCategoria;
import Control.ControlImagen;
import Control.ControlVideo;
import Modelo.Audio;
import Modelo.Categoria;
import Modelo.Video;
import java.awt.Image;
import java.util.LinkedList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Julian Escobar
 */
public class DatosAudio extends javax.swing.JFrame {

    LinkedList<Audio> audiosCuenta;
    LinkedList<Categoria> categoriasAudios;
    Principal GUIprincipal4;

    int contador;
    byte[] AudioSubido;

    //**************************************************
    String NombreUsuarioAudios;
    String FechaSubidaA;
    String FormatoActualA;
    String TamanoA;
    String NombreAudio;
    String DuracionA;
    String CategoriaActualA;
    String DescripcionAudio;

    public DatosAudio(String NombreUsuarioA) {

        initComponents();
        this.setLocationRelativeTo(this);
        NombreUsuarioAudios = NombreUsuarioA;

        audiosCuenta = new LinkedList<>();
        categoriasAudios = new LinkedList<>();

        FechaSubidaA = null;
        FormatoActualA = null;
        TamanoA = null;
        NombreAudio = null;
        DuracionA = null;
        CategoriaActualA = null;
        DescripcionAudio = null;
        contador = 0;
        AudioSubido = null;

        MostrarCategorias();
        ImagenInicial();
        MostrarAudiosCuenta();

        formatoActualAudio.setEnabled(false);
        formatoAudio.setEnabled(false);
        nombreAudio.setEnabled(false);
        categoriaActualAudio.setEnabled(false);
        categorias.setEnabled(false);
        TamanoActualAudio.setEnabled(false);
        TamanoAudio.setEnabled(false);
        duracionHoras.setEnabled(false);
        duracionMinutos.setEnabled(false);
        duracionSegundos.setEnabled(false);
        descripcionAudio.setEnabled(false);
        guardarAudio.setEnabled(false);

    }

    public DatosAudio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        LabelAudio = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        eliminarAudio = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcionAudio = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        fechaSubidaAudio = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nombreAudio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        formatoActualAudio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        duracionHoras = new javax.swing.JTextField();
        formatoAudio = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        categoriaActualAudio = new javax.swing.JTextField();
        categorias = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        EditarAudio = new javax.swing.JButton();
        guardarAudio = new javax.swing.JButton();
        regresarAudio = new javax.swing.JButton();
        duracionSegundos = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        duracionMinutos = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        TamanoActualAudio = new javax.swing.JTextField();
        TamanoAudio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Datos Audio");

        LabelAudio.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        jButton1.setText("<<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 9)); // NOI18N
        jButton2.setText(">>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        eliminarAudio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        eliminarAudio.setText("Eliminar");
        eliminarAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarAudioActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Descripción audio/Máximo 150 caracteres");

        descripcionAudio.setColumns(20);
        descripcionAudio.setRows(5);
        jScrollPane1.setViewportView(descripcionAudio);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Fecha subida");

        fechaSubidaAudio.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Nombre Audio");

        nombreAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreAudioActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Formato Actual");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Duración");

        duracionHoras.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        duracionHoras.setText("00");
        duracionHoras.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                duracionHorasFocusGained(evt);
            }
        });
        duracionHoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duracionHorasActionPerformed(evt);
            }
        });

        formatoAudio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-----------------------", "MP4", "WAV" }));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Formato Audio");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Categoría actual");

        categorias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----------------------" }));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Categorías");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));

        EditarAudio.setText("Editar");
        EditarAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarAudioActionPerformed(evt);
            }
        });

        guardarAudio.setText("Guardar");
        guardarAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarAudioActionPerformed(evt);
            }
        });

        regresarAudio.setText("Regresar");
        regresarAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarAudioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EditarAudio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guardarAudio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(regresarAudio, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(EditarAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guardarAudio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(regresarAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        duracionSegundos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        duracionSegundos.setText("00");
        duracionSegundos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                duracionSegundosFocusGained(evt);
            }
        });
        duracionSegundos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duracionSegundosActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText(":");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText(":");

        duracionMinutos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        duracionMinutos.setText("00");
        duracionMinutos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                duracionMinutosFocusGained(evt);
            }
        });
        duracionMinutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duracionMinutosActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Hor");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Min");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Seg");

        TamanoActualAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TamanoActualAudioActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Tamaño Actual");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Nuevo tamaño audio");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(LabelAudio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eliminarAudio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(fechaSubidaAudio)
                            .addComponent(jLabel5)
                            .addComponent(nombreAudio)
                            .addComponent(jLabel2)
                            .addComponent(TamanoActualAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(formatoActualAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(categoriaActualAudio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel17)
                                .addComponent(TamanoAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(formatoAudio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel7)
                                    .addComponent(categorias, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(duracionHoras, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel12))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel14)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel15))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(duracionMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel16))
                                            .addComponent(duracionSegundos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel6))
                                    .addGap(3, 3, 3)
                                    .addComponent(formatoAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(20, 20, 20)
                                            .addComponent(categorias, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel10)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(formatoActualAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(nombreAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(categoriaActualAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(LabelAudio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eliminarAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TamanoAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(duracionHoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(duracionSegundos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(duracionMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(4, 4, 4)
                        .addComponent(fechaSubidaAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TamanoActualAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1)
                .addGap(4, 4, 4))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TamanoActualAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TamanoActualAudioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TamanoActualAudioActionPerformed

    private void duracionMinutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duracionMinutosActionPerformed

    }//GEN-LAST:event_duracionMinutosActionPerformed

    private void duracionMinutosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_duracionMinutosFocusGained
        duracionMinutos.setText("");
    }//GEN-LAST:event_duracionMinutosFocusGained

    private void duracionSegundosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duracionSegundosActionPerformed

    }//GEN-LAST:event_duracionSegundosActionPerformed

    private void duracionSegundosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_duracionSegundosFocusGained
        duracionSegundos.setText("");
    }//GEN-LAST:event_duracionSegundosFocusGained

    private void regresarAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarAudioActionPerformed

        GUIprincipal4 = new Principal();
        GUIprincipal4.show();
        GUIprincipal4.setNombreUsuarioPrincipal(NombreUsuarioAudios);
        this.dispose();

    }//GEN-LAST:event_regresarAudioActionPerformed

    private void guardarAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarAudioActionPerformed

        ControlAudio CA2 = new ControlAudio();

        NombreAudio = nombreAudio.getText();
        FormatoActualA = formatoAudio.getSelectedItem().toString();

        //Duracion = duracionHoras.getText() +":"+ duracionMinutos.getText() +":"+ duracionSegundos.getText();
        DescripcionAudio = descripcionAudio.getText();
        CategoriaActualA = categorias.getSelectedItem().toString();
        TamanoA = TamanoAudio.getText();

        if (CategoriaActualA.equals("----------------------")) {

            CategoriaActualA = categoriaActualAudio.getText();

        }//Fin if

        if (FormatoActualA.equals("-----------------------")) {

            FormatoActualA = formatoActualAudio.getText();

        }//Fin if

        if (TamanoA.equals("")) {

            TamanoA = TamanoActualAudio.getText();

        }//Fin if

        String duracion = audiosCuenta.get(contador).getDuracionAudio();
        String[] DuracionTotal = duracion.split(":");

        //******************************************************************************************************************
        //CONDICIONES PARA OBTENER EL TIEMPO EN FORMATO 00:00:00
        if (duracionHoras.getText().equals("")) {
            DuracionA = "00";
        } else {
            switch (duracionHoras.getText().length()) {
                case 1:
                    DuracionA = "0" + duracionHoras.getText();
                    break;
                case 2:
                    DuracionA = duracionHoras.getText();
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Hora no válida", "Advertencia", JOptionPane.ERROR_MESSAGE);
                    DuracionA = DuracionTotal[0];
                    duracionHoras.setText(DuracionTotal[0]);
                    break;
            }
        }

        if (duracionMinutos.getText().equals("")) {
            DuracionA = DuracionA + ":00";
        } else {
            if (duracionMinutos.getText().length() == 1) {
                DuracionA = DuracionA + ":0" + duracionMinutos.getText();
            } else if (duracionMinutos.getText().length() == 2 && Integer.parseInt(duracionMinutos.getText()) <= 60) {
                DuracionA = DuracionA + ":" + duracionMinutos.getText();
            } else {
                JOptionPane.showMessageDialog(null, "Minutos no válidos", "Advertencia", JOptionPane.ERROR_MESSAGE);
                DuracionA = DuracionA + ":" + DuracionTotal[1];
                duracionMinutos.setText(DuracionTotal[1]);
            }
        }

        if (duracionSegundos.getText().equals("")) {
            DuracionA = DuracionA + ":00";
        } else {
            if (duracionSegundos.getText().length() == 1) {
                DuracionA = DuracionA + ":0" + duracionSegundos.getText();
            } else if (duracionSegundos.getText().length() == 2 && Integer.parseInt(duracionSegundos.getText()) <= 60) {
                DuracionA = DuracionA + ":" + duracionSegundos.getText();
            } else {
                JOptionPane.showMessageDialog(null, "Segundos no válidos", "Advertencia", JOptionPane.ERROR_MESSAGE);
                DuracionA = DuracionA + ":" + DuracionTotal[2];
                duracionSegundos.setText(DuracionTotal[2]);
            }
        }

        //*************************************************************************************************************************
        //Se actualiza los valores del audio, siempre y cuando el usuario haya realizado una modificación desde la aplicación
        audiosCuenta.get(contador).setNombreAudio(NombreAudio);
        audiosCuenta.get(contador).setFormato_Audio(FormatoActualA);
        audiosCuenta.get(contador).setTamanoAudio(TamanoA);
        audiosCuenta.get(contador).setDuracionAudio(DuracionA);
        audiosCuenta.get(contador).setDescripcionAudio(DescripcionAudio);

        Audio audioActualizar = audiosCuenta.get(contador);
        String pkCategoria = "";

        for (int i = 0; i < categoriasAudios.size(); i++) {

            if (categoriasAudios.get(i).getNombreCategoria().equals(CategoriaActualA)) {

                pkCategoria = categoriasAudios.get(i).getCodigoCategoria();
                audiosCuenta.get(contador).setCategoriaAudio(CategoriaActualA);

            }//Fin if

        }//Fin for

        //*************************************************************************************************************************
        boolean t = CA2.ActualizarDatos(audiosCuenta.get(contador).getIdContenidoA(), audioActualizar, pkCategoria);

        if (t) {

            JOptionPane.showMessageDialog(null, "Datos actualizados.");

        } else {

            JOptionPane.showMessageDialog(null, "Datos no actualizados.");

        }//Fin if

    }//GEN-LAST:event_guardarAudioActionPerformed

    private void duracionHorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duracionHorasActionPerformed

    }//GEN-LAST:event_duracionHorasActionPerformed

    private void duracionHorasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_duracionHorasFocusGained
        duracionHoras.setText("");
    }//GEN-LAST:event_duracionHorasFocusGained

    private void nombreAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreAudioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreAudioActionPerformed

    private void eliminarAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarAudioActionPerformed

        int respuesta = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea eliminar el audio?");

        if (respuesta == 0) {

            ControlAudio CA3 = new ControlAudio();

            String IdContenido = audiosCuenta.get(contador).getIdContenidoA();

            boolean t = CA3.EliminarAudio(IdContenido);

            if (t) {

                JOptionPane.showMessageDialog(null, "Datos del audio eliminados.");
                //Se elimina el objeto de la imagen que quedó en el linkedlist
                audiosCuenta.remove(contador);
                LabelAudio.setIcon(null);
                fechaSubidaAudio.setText("");
                formatoActualAudio.setText("");
                categoriaActualAudio.setText("");
                duracionHoras.setText("");
                duracionMinutos.setText("");
                duracionSegundos.setText("");
                descripcionAudio.setText("");
                nombreAudio.setText("");
                TamanoActualAudio.setText("");

            } else {

                JOptionPane.showMessageDialog(null, "Datos del audio no eliminados.");

            }//Fin if

        }//Fin if respuesta

    }//GEN-LAST:event_eliminarAudioActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if (contador < (audiosCuenta.size() - 1)) {

            contador = 1 + contador;
            categorias.setSelectedIndex(0);
            formatoAudio.setSelectedIndex(0);
            //Se invocaría este método cada vez que se presione el botón >> con el cambio de contador
            //Para traer los datos de las imágenes correspondiente
            //a una cuenta. Claramente, cada invocación actualiza los datos
            MostrarAudios();
            desactivarCampos();

        }//Fin if
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (contador > 0) {

            contador = contador - 1;
            categorias.setSelectedIndex(0);
            formatoAudio.setSelectedIndex(0);
            //Se invocaría este método cada vez que se presione el botón << con el cambio de contador
            //Para traer los datos de las imágenes correspondiente
            //a una cuenta. Claramente, cada invocación actualiza los datos
            MostrarAudios();
            desactivarCampos();

        }//Fin if
    }//GEN-LAST:event_jButton1ActionPerformed

    private void EditarAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarAudioActionPerformed

        activarCampos();

    }//GEN-LAST:event_EditarAudioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatosAudio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatosAudio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatosAudio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatosAudio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatosAudio().setVisible(true);
            }
        });
    }

    //Método para mostrar los videos en la aplicación
    public void MostrarAudios() {

        fechaSubidaAudio.setText(audiosCuenta.get(contador).getFechaSubidaA());
        nombreAudio.setText(audiosCuenta.get(contador).getNombreAudio());
        formatoActualAudio.setText(audiosCuenta.get(contador).getFormato_Audio());

        String duracion = audiosCuenta.get(contador).getDuracionAudio();
        String[] DuracionTotal = duracion.split(":");

        duracionHoras.setText(DuracionTotal[0]);
        duracionMinutos.setText(DuracionTotal[1]);
        duracionSegundos.setText(DuracionTotal[2]);

        TamanoActualAudio.setText(audiosCuenta.get(contador).getTamanoAudio());

        categoriaActualAudio.setText(audiosCuenta.get(contador).getCategoriaAudio());

        descripcionAudio.setText(audiosCuenta.get(contador).getDescripcionAudio());

        AudioSubido = audiosCuenta.get(contador).getArchivoAudio();

    }//Fin método

    public void MostrarCategorias() {

        ControlCategoria CC = new ControlCategoria();
        categoriasAudios = CC.LeerCategorias();

        for (int i = 0; i < categoriasAudios.size(); i++) {

            categorias.addItem(categoriasAudios.get(i).getNombreCategoria());

        }//Fin for

    }//Fin método

    public void ImagenInicial() {

        ImageIcon icon = new ImageIcon(AgregarAudio.class.getResource("/Imagenes/IconoAudio.jpg"));
        Icon icono = new ImageIcon(icon.getImage().getScaledInstance(LabelAudio.getWidth(), LabelAudio.getHeight(), Image.SCALE_DEFAULT));
        LabelAudio.setIcon(icono);

    }//Fin método

    public void MostrarAudiosCuenta() {

        ControlAudio CIA = new ControlAudio();

        //Devuelve un linkelist donde se encuentra guardado todos los datos del audio de la cuenta
        audiosCuenta = CIA.TraerAudiosCuenta(NombreUsuarioAudios);

        if (audiosCuenta.isEmpty() == false) {

            MostrarAudios();

            eliminarAudio.setEnabled(true);
            guardarAudio.setEnabled(true);

        } else {

            JOptionPane.showMessageDialog(null, "No has agregado contenido de audio a tu cuenta." + "\n\nNota: puedes agregar audio(s) presionando la pestaña" + "\n[Audio] que se encuentra en la ventana principal.");

            guardarAudio.setEnabled(false);
            eliminarAudio.setEnabled(false);

        }//Fin if

    }//Fin método

    public void activarCampos() {

        formatoAudio.setEnabled(true);
        nombreAudio.setEnabled(true);
        categorias.setEnabled(true);
        TamanoAudio.setEnabled(true);
        duracionHoras.setEnabled(true);
        duracionMinutos.setEnabled(true);
        duracionSegundos.setEnabled(true);
        descripcionAudio.setEnabled(true);
        guardarAudio.setEnabled(true);

    }//Fin método

    public void desactivarCampos() {

        formatoAudio.setEnabled(false);
        nombreAudio.setEnabled(false);
        categorias.setEnabled(false);
        TamanoAudio.setEnabled(false);
        duracionHoras.setEnabled(false);
        duracionMinutos.setEnabled(false);
        duracionSegundos.setEnabled(false);
        descripcionAudio.setEnabled(false);
        guardarAudio.setEnabled(false);

    }//Fin método


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EditarAudio;
    private javax.swing.JLabel LabelAudio;
    private javax.swing.JTextField TamanoActualAudio;
    private javax.swing.JTextField TamanoAudio;
    private javax.swing.JTextField categoriaActualAudio;
    private javax.swing.JComboBox<String> categorias;
    private javax.swing.JTextArea descripcionAudio;
    private javax.swing.JTextField duracionHoras;
    private javax.swing.JTextField duracionMinutos;
    private javax.swing.JTextField duracionSegundos;
    private javax.swing.JButton eliminarAudio;
    private javax.swing.JTextField fechaSubidaAudio;
    private javax.swing.JTextField formatoActualAudio;
    private javax.swing.JComboBox<String> formatoAudio;
    private javax.swing.JButton guardarAudio;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField nombreAudio;
    private javax.swing.JButton regresarAudio;
    // End of variables declaration//GEN-END:variables
}
