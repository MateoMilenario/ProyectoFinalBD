/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Control.ControlCategoria;
import Modelo.Categoria;
import Modelo.Audio;
import Control.ControlAudio;
import java.awt.Image;
import java.io.File;
import java.util.Calendar;
import java.util.LinkedList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Julian Escobar
 */
public class AgregarAudio extends javax.swing.JFrame {

    LinkedList<Categoria> categorias;
    Principal GUIprincipal5;

    //**********************************************************
    JFileChooser seleccionadorAudio;
    File archivo;
    Audio AudioAgregar;

    String NombreUsuarioAudio;

    //***************************************************
    String NombreAudio;
    String Formato;
    String Tamano;
    String Duracion;
    String Categoria;
    String Descripcion;
    String FechaSubido;
    String pkCategoria;

    String duracionSegundos;
    String duracionMinutos;
    String duracionHoras;
    String FormatoAudio;

    public AgregarAudio() {
        initComponents();
        this.setLocationRelativeTo(this);

        seleccionadorAudio = new JFileChooser();
        archivo = null;
        NombreAudio = null;
        Formato = null;
        Tamano = null;
        Duracion = null;
        Categoria = null;
        Descripcion = null;
        FechaSubido = null;
        AgregarAudio.setEnabled(false);

        categorias = new LinkedList<>();
        formatoAudio.setEnabled(false);

        ImagenInicial();
        TraerCategorias();

    }

    public String getNombreUsuarioAudios() {
        return NombreUsuarioAudio;
    }

    public void setNombreUsuarioAudios(String NombreUsuarioVideo) {
        this.NombreUsuarioAudio = NombreUsuarioVideo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        LabelAudioAgregar = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nombreAudio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        formatoAudio = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcionVideo = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        CategoriaAgregarAudio = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        AgregarAudio = new javax.swing.JButton();
        SeleccionarAudio = new javax.swing.JButton();
        CambiarAudio = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TamanoAudio = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        duracionSegundosA = new javax.swing.JTextField();
        duracionMinutosA = new javax.swing.JTextField();
        duracionHorasA = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabelEstado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Agregar Audio");

        LabelAudioAgregar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Nombre Audio");

        nombreAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreAudioActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Formato audio");

        formatoAudio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------------------------------------", "MP4", "WAV" }));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Descripción del audio/máximo 150 caracteres ");

        descripcionVideo.setColumns(20);
        descripcionVideo.setRows(5);
        jScrollPane1.setViewportView(descripcionVideo);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Seleccionar categoría");

        CategoriaAgregarAudio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------------------------------------" }));
        CategoriaAgregarAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoriaAgregarAudioActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));

        AgregarAudio.setText("Agregar");
        AgregarAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarAudioActionPerformed(evt);
            }
        });

        SeleccionarAudio.setText("Seleccionar");
        SeleccionarAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccionarAudioActionPerformed(evt);
            }
        });

        CambiarAudio.setText("Regresar");
        CambiarAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambiarAudioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SeleccionarAudio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AgregarAudio, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CambiarAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SeleccionarAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CambiarAudio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AgregarAudio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Nota:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Seleccionar una sola categoría para el audio a subir en el aplica-");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("tivo multimedia.");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel10))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Tamaño");

        TamanoAudio.setName(""); // NOI18N
        TamanoAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TamanoAudioActionPerformed(evt);
            }
        });

        duracionSegundosA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        duracionSegundosA.setText("00");
        duracionSegundosA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                duracionSegundosAFocusGained(evt);
            }
        });
        duracionSegundosA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duracionSegundosAActionPerformed(evt);
            }
        });

        duracionMinutosA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        duracionMinutosA.setText("00");
        duracionMinutosA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                duracionMinutosAFocusGained(evt);
            }
        });
        duracionMinutosA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duracionMinutosAActionPerformed(evt);
            }
        });

        duracionHorasA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        duracionHorasA.setText("00");
        duracionHorasA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                duracionHorasAFocusGained(evt);
            }
        });
        duracionHorasA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duracionHorasAActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Hor");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Min");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Seg");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText(":");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText(":");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Duración");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(duracionHorasA, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel15))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(duracionMinutosA, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel17))
                            .addComponent(duracionSegundosA, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(duracionHorasA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(duracionSegundosA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel16)
                    .addComponent(duracionMinutosA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel17))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabelEstado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelEstado.setText("Estado archivo:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(LabelAudioAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(nombreAudio, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TamanoAudio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(formatoAudio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(CategoriaAgregarAudio, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelEstado))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(12, 12, 12)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelAudioAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelEstado)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(1, 1, 1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(formatoAudio, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                                            .addComponent(nombreAudio))
                                        .addGap(20, 20, 20)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(2, 2, 2)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(CategoriaAgregarAudio)
                                            .addComponent(TamanoAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)))))))
                .addGap(16, 16, 16)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SeleccionarAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionarAudioActionPerformed

        AgregarAudio.setEnabled(true);

        if (seleccionadorAudio.showDialog(null, null) == JFileChooser.APPROVE_OPTION) {

            archivo = seleccionadorAudio.getSelectedFile();

            if (archivo.canRead()) {

                //El endsWith especifica si la cadena que compone el archivo imagen termina en mp4 o mov para ser verificada.
                if (archivo.getName().endsWith("mp3") || archivo.getName().endsWith("wav")) {

                    if (archivo.getName().endsWith("mp3")) {

                        FormatoAudio = "MP3";

                    } else if (archivo.getName().endsWith("wav")) {

                        FormatoAudio = "WAV";

                    }//Fin condición

                    JOptionPane.showMessageDialog(null, "Archivo de audio seleccionado.");
                    jLabelEstado.setText("Estado archivo: subido");

                } else {

                    JOptionPane.showMessageDialog(null, "Formato de audio no aceptado. Se recomienda: mp3 o wav.", "Advertencia", JOptionPane.ERROR_MESSAGE);
                    jLabelEstado.setText("Estado archivo: no subido.");

                }//Fin if tercer if

            }//Fin segundo if

        }//Fin primer if

    }//GEN-LAST:event_SeleccionarAudioActionPerformed

    private void AgregarAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarAudioActionPerformed

        //***************************************************************************************************************************************************************
        NombreAudio = nombreAudio.getText();
        //Formato = formatoAudio.getSelectedItem().toString();
        Formato = FormatoAudio;
        Tamano = TamanoAudio.getText();

        duracionSegundos = duracionSegundosA.getText();
        duracionMinutos = duracionMinutosA.getText();
        duracionHoras = duracionHorasA.getText();

        //CONDICIONES PARA OBTENER EL TIEMPO EN FORMATO 00:00:00
        if (duracionSegundos.equals("00") && duracionMinutos.equals("00") && duracionHoras.equals("00")) {

            Duracion = null;

        } else if (duracionSegundos.equals("") && duracionMinutos.equals("") && duracionHoras.equals("")) {

            Duracion = null;

        } else {

            if (duracionSegundos.equals("")) {

                duracionSegundos = "00";

            }//Fin if

            if (duracionMinutos.equals("")) {

                duracionMinutos = "00";

            }//Fin if

            if (duracionHoras.equals("")) {

                duracionHoras = "00";

            }//Fin if

            //Invoca el método para crear el formato establecido
            ValidarDuracion();

        }//Fin if principal

        //***************************************************************************************************************************************************************
        Descripcion = descripcionVideo.getText();
        Categoria = CategoriaAgregarAudio.getSelectedItem().toString();

        Calendar c2 = Calendar.getInstance();
        //Se obtiene el año, mes y día en el momento en que se crea la cuenta
        String Dia2 = Integer.toString(c2.get(Calendar.DATE));
        String Mes2 = Integer.toString(c2.get(Calendar.MONTH) + 1);
        String Año2 = Integer.toString(c2.get(Calendar.YEAR));

        //Se obtiene la hora, los minutos y los segundos en el momento en que se inserta el comentario
        String Hora = Integer.toString(c2.get(Calendar.HOUR));
        String Minutos = Integer.toString(c2.get(Calendar.MINUTE));
        String Segundos = Integer.toString(c2.get(Calendar.SECOND));

        if (Segundos.length() == 1) {

            Segundos = "0" + Segundos;

        }//Fin if

        FechaSubido = Año2.substring(2, 4) + "-0" + Mes2 + "-" + Dia2 + " " + Hora + ":" + Minutos + ":" + Segundos;

        //**********************************************************************
        boolean Ejecutar = ValidarCamposGui();

        if (Ejecutar) {

            //Variable que guadará el pk de categoría proveniente del método pkCategoriaImagen
            pkCategoria = PKcategoriaAudio();

            //**************************************************************************************************************
            AudioAgregar = new Audio(FechaSubido, NombreAudio, archivo.toString(), Formato, Tamano, Duracion, Descripcion);

            ControlAudio CA = new ControlAudio();

            boolean t = CA.InsertarAudio(AudioAgregar, NombreUsuarioAudio, pkCategoria);

            if (t) {

                JOptionPane.showMessageDialog(null, "Datos del audio guardados.");

                nombreAudio.setText("");
                //formatoAudio.setSelectedItem("------------------------------------");
                duracionHorasA.setText("00");
                duracionMinutosA.setText("00");
                duracionSegundosA.setText("00");
                CategoriaAgregarAudio.setSelectedItem("------------------------------------");
                descripcionVideo.setText("");
                TamanoAudio.setText("");
                jLabelEstado.setText("Estado archivo:");
                //ImagenPredeterminada();

            } else {

                JOptionPane.showMessageDialog(null, "Datos del audio no guardados.");

            }//Fin if confirmación guardado

        }//Fin if ejecutar

    }//GEN-LAST:event_AgregarAudioActionPerformed

    private void CambiarAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambiarAudioActionPerformed

        GUIprincipal5 = new Principal();
        GUIprincipal5.setNombreUsuarioPrincipal(NombreUsuarioAudio);
        GUIprincipal5.show();
        this.dispose();

    }//GEN-LAST:event_CambiarAudioActionPerformed

    private void duracionHorasAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_duracionHorasAFocusGained
        duracionHorasA.setText("");
    }//GEN-LAST:event_duracionHorasAFocusGained

    private void duracionHorasAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duracionHorasAActionPerformed

    }//GEN-LAST:event_duracionHorasAActionPerformed

    private void duracionMinutosAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_duracionMinutosAFocusGained
        duracionMinutosA.setText("");
    }//GEN-LAST:event_duracionMinutosAFocusGained

    private void duracionMinutosAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duracionMinutosAActionPerformed

    }//GEN-LAST:event_duracionMinutosAActionPerformed

    private void duracionSegundosAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_duracionSegundosAFocusGained
        duracionSegundosA.setText("");
    }//GEN-LAST:event_duracionSegundosAFocusGained

    private void duracionSegundosAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duracionSegundosAActionPerformed

    }//GEN-LAST:event_duracionSegundosAActionPerformed

    private void nombreAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreAudioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreAudioActionPerformed

    private void TamanoAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TamanoAudioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TamanoAudioActionPerformed

    private void CategoriaAgregarAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoriaAgregarAudioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CategoriaAgregarAudioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarImagen().setVisible(true);
            }
        });
    }

    //Método que establece la imagen predeterminada en la foto de perfil
    public void ImagenPredeterminada() {

        ImageIcon icon2 = new ImageIcon(AgregarAudio.class.getResource("/Imagenes/Perfil.jpg"));
        Icon icono2 = new ImageIcon(icon2.getImage().getScaledInstance(LabelAudioAgregar.getWidth(), LabelAudioAgregar.getHeight(), Image.SCALE_DEFAULT));
        LabelAudioAgregar.setIcon(icono2);

    }//Fin método

    public void ImagenInicial() {

        ImageIcon icon = new ImageIcon(AgregarAudio.class.getResource("/Imagenes/IconoAudio.jpg"));
        Icon icono = new ImageIcon(icon.getImage().getScaledInstance(LabelAudioAgregar.getWidth(), LabelAudioAgregar.getHeight(), Image.SCALE_DEFAULT));
        LabelAudioAgregar.setIcon(icono);

    }//Fin método

    //******************************************************************************************************************************************************
    public String PKcategoriaAudio() {

        String pkcategoria = "";

        //Se recorre toda la lista para comparar nombres de categorias, el cual el usuario seleccionó
        //Posteriormente, se extrae el PK asociado a esa categoría para colocarlo en la imagen que será guardado en la BD
        for (int i = 0; i < categorias.size(); i++) {

            if (categorias.get(i).getNombreCategoria().equals(Categoria)) {

                pkcategoria = categorias.get(i).getCodigoCategoria();

            }//Fin if

        }//Fin for

        return pkcategoria;

    }//Fin método

    public void TraerCategorias() {

        //Se trae todo los datos de categorías que se encuentran en la BD
        ControlCategoria CC = new ControlCategoria();

        categorias = CC.LeerCategorias();

        //Este for escribe en el comboBox los nombres de las categorías que yacen en la BD        
        for (int i = 0; i < categorias.size(); i++) {

            CategoriaAgregarAudio.addItem(categorias.get(i).getNombreCategoria());

        }//Fin for

    }//Fin método

    public void OrganizarDuracion() {

        if (duracionSegundos.length() == 1) {

            duracionSegundos = "0" + duracionSegundos;

        }//Fin if

        if (duracionMinutos.length() == 1) {

            duracionMinutos = "0" + duracionMinutos;

        }//Fin if

        if (duracionHoras.length() == 1) {

            duracionHoras = "0" + duracionHoras;

        }//Fin if

    }//Fin método

    public void ValidarDuracion() {

        boolean entrar = true;

        if (Integer.parseInt(duracionSegundos) >= 60) {

            JOptionPane.showMessageDialog(null, "Campo: segundos " + "\nDuración máxima aceptados es: 59 segundos.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            entrar = false;

        }//Fin if

        if (Integer.parseInt(duracionMinutos) >= 60) {

            JOptionPane.showMessageDialog(null, "Campo: minutos " + "\nDuración máxima aceptados es: 59 minutos.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            entrar = false;

        }//Fin if

        if (Integer.parseInt(duracionHoras) > 2) {

            JOptionPane.showMessageDialog(null, "Campo: Horas " + "\nSolo se acepta contenidos de audios con una duración máxima de 2 horas.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            entrar = false;

        }//Fin if

        if (entrar) {

            //Invoca el método para organizar la duración con el formato 00:00:00
            OrganizarDuracion();
            Duracion = duracionHoras + ":" + duracionMinutos + ":" + duracionSegundos;

        } else {

            Duracion = null;

        }//Fin if

    }//Fin método

    public boolean ValidarCamposGui() {

        boolean t = true;

        //Se válida que los campos obligatorios a llenar sean llenados por el usuario
        //Si sucede el caso contrario, se facilitará un mensaje de advertencia
        if (archivo == null) {

            JOptionPane.showMessageDialog(null, "Audio no seleccionado.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

        if (NombreAudio.equals("")) {

            JOptionPane.showMessageDialog(null, "Nombre del audio faltante.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

//        if (Formato.equals("------------------------------------")) {
//
//            JOptionPane.showMessageDialog(null, "Formato del audio faltante.", "Advertencia", JOptionPane.ERROR_MESSAGE);
//            t = false;
//
//        }//Fin if
        if (Formato == null) {

            JOptionPane.showMessageDialog(null, "Formato del audio faltante.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

        if (Tamano.equals("")) {

            JOptionPane.showMessageDialog(null, "Tamaño del audio faltante.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

        if (Descripcion.equals("")) {

            JOptionPane.showMessageDialog(null, "Descripción del audio faltante.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

        if (Categoria.equals("------------------------------------")) {

            JOptionPane.showMessageDialog(null, "Categoría del audio faltante.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

        if (Duracion == null) {

            JOptionPane.showMessageDialog(null, "verificar campo duración del audio.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

        return t;

    }//Fin método

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarAudio;
    private javax.swing.JButton CambiarAudio;
    private javax.swing.JComboBox<String> CategoriaAgregarAudio;
    private javax.swing.JLabel LabelAudioAgregar;
    private javax.swing.JButton SeleccionarAudio;
    private javax.swing.JTextField TamanoAudio;
    private javax.swing.JTextArea descripcionVideo;
    private javax.swing.JTextField duracionHorasA;
    private javax.swing.JTextField duracionMinutosA;
    private javax.swing.JTextField duracionSegundosA;
    private javax.swing.JComboBox<String> formatoAudio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelEstado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField nombreAudio;
    // End of variables declaration//GEN-END:variables
}
