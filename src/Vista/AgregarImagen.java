/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Control.ControlCategoria;
import Control.ControlImagen;
import Modelo.Categoria;
import Modelo.Imagen;
import java.awt.Image;
import java.io.File;
import java.util.Calendar;
import java.util.LinkedList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Mateo
 */
public class AgregarImagen extends javax.swing.JFrame {

    LinkedList<Categoria> categorias = new LinkedList<>();
    Principal GUIprincipal2;

    //**********************************************************
    JFileChooser seleccionadorImagen;
    File archivo;
    Imagen imagenAgregar;

    String NombreUsuarioImagen;

    //***************************************************
    String NombreImagen;
    String Formato;
    String Resolucion;
    String Categoria;
    String Descripcion;
    String FechaSubido;

    String pkCategoria;

    public AgregarImagen() {
        initComponents();
        this.setLocationRelativeTo(this);

        ExportarCategorias();

        seleccionadorImagen = new JFileChooser();
        archivo = null;
        NombreImagen = null;
        Formato = null;
        Resolucion = null;
        Categoria = null;
        Descripcion = null;
        FechaSubido = null;

        Agregar.setEnabled(false);

    }

    public String getNombreUsuarioImagen() {
        return NombreUsuarioImagen;
    }

    public void setNombreUsuarioImagen(String NombreUsuarioImagen) {
        this.NombreUsuarioImagen = NombreUsuarioImagen;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        LabelImagenAgregar = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nombreImagen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        formatoImagen = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        resolucionImagen = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcionImagen = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        CategoriaAgregarImagen = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        Agregar = new javax.swing.JButton();
        Seleccionar = new javax.swing.JButton();
        CambiarImagen = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Agregar Imagen");

        LabelImagenAgregar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Nombre Imagen");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Formato Imagen");

        formatoImagen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------------------------------------", "JPG", "PNG" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Resolución");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Descripción de la imagen/máximo 150 caracteres ");

        descripcionImagen.setColumns(20);
        descripcionImagen.setRows(5);
        jScrollPane1.setViewportView(descripcionImagen);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Seleccionar categoría");

        CategoriaAgregarImagen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------------------------------------" }));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));

        Agregar.setText("Agregar");
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });

        Seleccionar.setText("Seleccionar");
        Seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccionarActionPerformed(evt);
            }
        });

        CambiarImagen.setText("Regresar");
        CambiarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambiarImagenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Seleccionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Agregar, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CambiarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Seleccionar, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(Agregar, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                    .addComponent(CambiarImagen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Nota:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Seleccionar una sola categoría pa-");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("ra la imagen a subir en el aplicati-");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("vo multimedia.");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LabelImagenAgregar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreImagen)
                            .addComponent(resolucionImagen)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(formatoImagen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CategoriaAgregarImagen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LabelImagenAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombreImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resolucionImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(formatoImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CategoriaAgregarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionarActionPerformed

        Agregar.setEnabled(true);

        if (seleccionadorImagen.showDialog(null, null) == JFileChooser.APPROVE_OPTION) {

            archivo = seleccionadorImagen.getSelectedFile();

            if (archivo.canRead()) {

                //El endsWith especifica si la cadena que compone el archivo imagen termina en jpg o png para ser verificada.
                if (archivo.getName().endsWith("jpg") || archivo.getName().endsWith("png")) {

                    ImageIcon icon = new ImageIcon(archivo.toString());

                    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(LabelImagenAgregar.getWidth(), LabelImagenAgregar.getHeight(), Image.SCALE_DEFAULT));

                    //Se coloca la imagen con el tamaño que tiene el labol
                    LabelImagenAgregar.setIcon(icono);

                } else {

                    JOptionPane.showMessageDialog(null, "El Formato de la imagen no aceptado. Se recomienda: jpg o png.", "Error", JOptionPane.ERROR_MESSAGE);

                }//Fin if

            }//Fin segundo if

        }//Fin primer if

    }//GEN-LAST:event_SeleccionarActionPerformed

    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed

        //***************************************************************************************************************************************************************
        NombreImagen = nombreImagen.getText();
        Formato = formatoImagen.getSelectedItem().toString();
        Resolucion = resolucionImagen.getText();
        Descripcion = descripcionImagen.getText();
        Categoria = CategoriaAgregarImagen.getSelectedItem().toString();

        //**********************************************************************
        Calendar c2 = Calendar.getInstance();
        //Se obtiene el año, mes y día en el momento en que se crea la cuenta
        String Dia2 = Integer.toString(c2.get(Calendar.DATE));
        String Mes2 = Integer.toString(c2.get(Calendar.MONTH) + 1);
        String Año2 = Integer.toString(c2.get(Calendar.YEAR));

        //Se obtiene la hora, los minutos y los segundos en el momento en que se inserta el comentario
        String Hora = Integer.toString(c2.get(Calendar.HOUR));
        String Minutos = Integer.toString(c2.get(Calendar.MINUTE));
        String Segundos = Integer.toString(c2.get(Calendar.SECOND));

        if (Segundos.length() == 1) {

            Segundos = "0" + Segundos;

        }//Fin if

        FechaSubido = Año2.substring(2, 4) + "-0" + Mes2 + "-" + Dia2 + " " + Hora + ":" + Minutos + ":" + Segundos;

        //**********************************************************************
        boolean Ejecutar = ValidarCamposGUI();

        if (Ejecutar) {

            //Variable que guadará el pk de categoría proveniente del método pkCategoriaImagen
            pkCategoria = PKcategoriaImagen();

            //**************************************************************************************************************
            imagenAgregar = new Imagen(FechaSubido, NombreImagen, Formato, Descripcion, Resolucion, archivo.toString());

            ControlImagen CI = new ControlImagen();

            boolean t = CI.InsertarImagen(imagenAgregar, NombreUsuarioImagen, pkCategoria);

            if (t) {

                JOptionPane.showMessageDialog(null, "Datos de la imagen guardados.");

            } else {

                JOptionPane.showMessageDialog(null, "Datos de la imagen no guardados.");

            }

            //**************************************************************************************************************
            nombreImagen.setText("");
            formatoImagen.setSelectedItem("------------------------------------");
            resolucionImagen.setText("");
            CategoriaAgregarImagen.setSelectedItem("------------------------------------");
            descripcionImagen.setText("");
            ImagenPredeterminada();

        }//Fin if

    }//GEN-LAST:event_AgregarActionPerformed

    private void CambiarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambiarImagenActionPerformed

        GUIprincipal2 = new Principal();
        GUIprincipal2.setNombreUsuarioPrincipal(NombreUsuarioImagen);
        GUIprincipal2.show();
        this.dispose();

    }//GEN-LAST:event_CambiarImagenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarImagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarImagen().setVisible(true);
            }
        });
    }

    //Método que establece la imagen predeterminada en la foto de perfil
    public void ImagenPredeterminada() {

        //Establece por defecto una imagen de perfil hasta que el usuario la cambie
        String barra = File.separator;
        String ubicacion = System.getProperty("user.home") + barra + "Desktop" + barra + "Perfil.jpg" + barra;
        ImageIcon icon2 = new ImageIcon(ubicacion);
        Icon icono2 = new ImageIcon(icon2.getImage().getScaledInstance(LabelImagenAgregar.getWidth(), LabelImagenAgregar.getHeight(), Image.SCALE_DEFAULT));
        LabelImagenAgregar.setIcon(icono2);

    }//Fin método

    //******************************************************************************************************************************************************
    public String PKcategoriaImagen() {

        String pkcategoria = "";

        //Se recorre toda la lista para comparar nombres de categorias, el cual el usuario seleccionó
        //Posteriormente, se extrae el PK asociado a esa categoría para colocarlo en la imagen que será guardado en la BD
        for (int i = 0; i < categorias.size(); i++) {

            if (categorias.get(i).getNombreCategoria().equals(Categoria)) {

                pkcategoria = categorias.get(i).getCodigoCategoria();

            }//Fin if

        }//Fin for

        return pkcategoria;

    }//Fin método

    public void ExportarCategorias() {

        //Se trae todo los datos de categorías que se encuentran en la BD
        ControlCategoria CC = new ControlCategoria();

        categorias = CC.LeerCategorias();

        //Este for escribe en el comboBox los nombres de las categorías que yacen en la BD
        for (int i = 0; i < categorias.size(); i++) {

            CategoriaAgregarImagen.addItem(categorias.get(i).getNombreCategoria());

        }//Fin for

    }//Fin método

    public boolean ValidarCamposGUI() {

        boolean t = true;

        //Se válida que los campos obligatorios a llenar sean llenados por el usuario
        //Si sucede el caso contrario, se facilitará un mensaje de advertencia
        if (archivo == null) {

            JOptionPane.showMessageDialog(null, "Imagen no seleccionada.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

        if (NombreImagen.equals("")) {

            JOptionPane.showMessageDialog(null, "Nombre de la imagen faltante.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

        if (Formato.equals("------------------------------------")) {

            JOptionPane.showMessageDialog(null, "Formato de la imagen faltante.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

        if (Resolucion.equals("")) {

            JOptionPane.showMessageDialog(null, "Resolución de la imagen faltante.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

        if (Descripcion.equals("")) {

            JOptionPane.showMessageDialog(null, "Descripción de la imagen faltante.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

        if (Categoria.equals("------------------------------------")) {

            JOptionPane.showMessageDialog(null, "Categoría de la imagen faltante.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            t = false;

        }//Fin if

        return t;

    }//Fin método

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Agregar;
    private javax.swing.JButton CambiarImagen;
    private javax.swing.JComboBox<String> CategoriaAgregarImagen;
    private javax.swing.JLabel LabelImagenAgregar;
    private javax.swing.JButton Seleccionar;
    private javax.swing.JTextArea descripcionImagen;
    private javax.swing.JComboBox<String> formatoImagen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField nombreImagen;
    private javax.swing.JTextField resolucionImagen;
    // End of variables declaration//GEN-END:variables
}
